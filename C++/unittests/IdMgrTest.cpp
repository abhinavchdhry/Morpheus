/*
 * Unit test: IdMgr
 * 
 * Verify generation, reclamation and automated free up of Ids
 * generated by the IdMgr
 */

#include "IDMgr.h"
#include <iostream>

shared_ptr<IdMgr> gIdMgrPtr = IdMgr::GetNewInstance();
shared_ptr<IdMgr> gReusableIdMgrPtr = IdMgr::GetNewInstance(true);

void main()
{
	vector<IdPtr> testIdList;

	/* Test the reusable Id manager */
	// Allocate 10 Ids
	cout << "Generating Ids:" << endl;
	for (int i = 0; i < 10; i++)
	{
		testIdList.push_back(gReusableIdMgrPtr->GetNextId());
		cout << testIdList.back() << " " << endl;
	}

	/* Destroy all 10 Ids */
	cout << "Destroying Ids..." << endl;
	testIdList.clear();

	/* Regenerating Ids */
	cout << "Regenerating Ids:" << endl;
	for (int i = 0; i < 10; i++)
	{
		testIdList.push_back(gReusableIdMgrPtr->GetNextId());
		cout << testIdList.back() << " " << endl;
	}
}